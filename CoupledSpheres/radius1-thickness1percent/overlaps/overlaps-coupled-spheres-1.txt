{{{{2, 1, 0, 0, 0, 1, ComplexInfinity}, {2, 1, 0, 0, 0, 2, Indeterminate}, {2, 1, 0, 0, 0, 3, Indeterminate}}, {{2, 1, 0, 1, 0, 1, ComplexInfinity}, {2, 1, 0, 1, 0, 2, Indeterminate}, {2, 1, 0, 1, 0, 3, Indeterminate}}, {{2, 1, 0, 2, 0, 1, ComplexInfinity}, {2, 1, 0, 2, 0, 2, Indeterminate}, {2, 1, 0, 2, 0, 3, Indeterminate}}}, {{{2, 1, 0, 0, 1, 1, ComplexInfinity}, {2, 1, 0, 0, 1, 2, -0.21307418303672787/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 0, 0, 1, 3, -0.2211157169898397/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 0, 1, 1, 1, ComplexInfinity}, {2, 1, 0, 1, 1, 2, 0.10920402494218837/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 0, 1, 1, 3, 0.10786870299983503/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 0, 2, 1, 1, ComplexInfinity}, {2, 1, 0, 2, 1, 2, Indeterminate}, {2, 1, 0, 2, 1, 3, Indeterminate}}}, {{{2, 1, 0, 0, 2, 1, ComplexInfinity}, {2, 1, 0, 0, 2, 2, 0.1502256846601656/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 0, 0, 2, 3, 0.15287587862048096/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 0, 1, 2, 1, ComplexInfinity}, {2, 1, 0, 1, 2, 2, 0.07845594143751711/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 0, 1, 2, 3, 0.07326283696769897/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 0, 2, 2, 1, ComplexInfinity}, {2, 1, 0, 2, 2, 2, -0.15256856495203577/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 0, 2, 2, 3, -0.15396037547963723/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 1, 1, 0, 0, 1, ComplexInfinity}, {2, 1, 1, 0, 0, 2, Indeterminate}, {2, 1, 1, 0, 0, 3, Indeterminate}}, {{2, 1, 1, 1, 0, 1, ComplexInfinity}, {2, 1, 1, 1, 0, 2, Indeterminate}, {2, 1, 1, 1, 0, 3, Indeterminate}}, {{2, 1, 1, 2, 0, 1, ComplexInfinity}, {2, 1, 1, 2, 0, 2, Indeterminate}, {2, 1, 1, 2, 0, 3, Indeterminate}}}, {{{2, 1, 1, 0, 1, 1, ComplexInfinity}, {2, 1, 1, 0, 1, 2, -0.022374840845548423/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 1, 0, 1, 3, -0.0046794529196575296/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 1, 1, 1, 1, ComplexInfinity}, {2, 1, 1, 1, 1, 2, 0.025050168081997254/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 1, 1, 1, 3, 0.016961764528886297/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 1, 2, 1, 1, ComplexInfinity}, {2, 1, 1, 2, 1, 2, Indeterminate}, {2, 1, 1, 2, 1, 3, Indeterminate}}}, {{{2, 1, 1, 0, 2, 1, ComplexInfinity}, {2, 1, 1, 0, 2, 2, 0.0526539167204892/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 1, 0, 2, 3, -0.025523733141426266/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 1, 1, 2, 1, ComplexInfinity}, {2, 1, 1, 1, 2, 2, 0.10052147147665678/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 1, 1, 2, 3, -0.03551740416688982/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 1, 2, 2, 1, ComplexInfinity}, {2, 1, 1, 2, 2, 2, -0.010161768119490272/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 1, 2, 2, 3, 0.12313372014403486/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 1, 2, 0, 0, 1, ComplexInfinity}, {2, 1, 2, 0, 0, 2, Indeterminate}, {2, 1, 2, 0, 0, 3, Indeterminate}}, {{2, 1, 2, 1, 0, 1, ComplexInfinity}, {2, 1, 2, 1, 0, 2, Indeterminate}, {2, 1, 2, 1, 0, 3, Indeterminate}}, {{2, 1, 2, 2, 0, 1, ComplexInfinity}, {2, 1, 2, 2, 0, 2, Indeterminate}, {2, 1, 2, 2, 0, 3, Indeterminate}}}, {{{2, 1, 2, 0, 1, 1, ComplexInfinity}, {2, 1, 2, 0, 1, 2, (197.25978085323658*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 0, 1, 2, 0, 1, 2}[[1]], {2, 1, 2, 0, 1, 2, 0, 1, 2}[[2]], {2, 1, 2, 0, 1, 2, 0, 1, 2}[[3]]}, {{2, 1, 2, 0, 1, 2, 0, 1, 2}[[4]], {2, 1, 2, 0, 1, 2, 0, 1, 2}[[5]], {2, 1, 2, 0, 1, 2, 0, 1, 2}[[6]]}, {{2, 1, 2, 0, 1, 2, 0, 1, 2}[[7]], {2, 1, 2, 0, 1, 2, 0, 1, 2}[[8]], {2, 1, 2, 0, 1, 2, 0, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 0, 1, 2, 0, 1, 2}[[1]]], "n", ToString[{2, 1, 2, 0, 1, 2, 0, 1, 2}[[2]]], "l", ToString[{2, 1, 2, 0, 1, 2, 0, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 2, 0, 1, 3, (386.6016225754408*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 0, 1, 3, 0, 1, 3}[[1]], {2, 1, 2, 0, 1, 3, 0, 1, 3}[[2]], {2, 1, 2, 0, 1, 3, 0, 1, 3}[[3]]}, {{2, 1, 2, 0, 1, 3, 0, 1, 3}[[4]], {2, 1, 2, 0, 1, 3, 0, 1, 3}[[5]], {2, 1, 2, 0, 1, 3, 0, 1, 3}[[6]]}, {{2, 1, 2, 0, 1, 3, 0, 1, 3}[[7]], {2, 1, 2, 0, 1, 3, 0, 1, 3}[[8]], {2, 1, 2, 0, 1, 3, 0, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 0, 1, 3, 0, 1, 3}[[1]]], "n", ToString[{2, 1, 2, 0, 1, 3, 0, 1, 3}[[2]]], "l", ToString[{2, 1, 2, 0, 1, 3, 0, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 2, 1, 1, 1, ComplexInfinity}, {2, 1, 2, 1, 1, 2, (197.3120099606377*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 1, 1, 2, 1, 1, 2}[[1]], {2, 1, 2, 1, 1, 2, 1, 1, 2}[[2]], {2, 1, 2, 1, 1, 2, 1, 1, 2}[[3]]}, {{2, 1, 2, 1, 1, 2, 1, 1, 2}[[4]], {2, 1, 2, 1, 1, 2, 1, 1, 2}[[5]], {2, 1, 2, 1, 1, 2, 1, 1, 2}[[6]]}, {{2, 1, 2, 1, 1, 2, 1, 1, 2}[[7]], {2, 1, 2, 1, 1, 2, 1, 1, 2}[[8]], {2, 1, 2, 1, 1, 2, 1, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 1, 1, 2, 1, 1, 2}[[1]]], "n", ToString[{2, 1, 2, 1, 1, 2, 1, 1, 2}[[2]]], "l", ToString[{2, 1, 2, 1, 1, 2, 1, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 2, 1, 1, 3, (392.09603732397306*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 1, 1, 3, 1, 1, 3}[[1]], {2, 1, 2, 1, 1, 3, 1, 1, 3}[[2]], {2, 1, 2, 1, 1, 3, 1, 1, 3}[[3]]}, {{2, 1, 2, 1, 1, 3, 1, 1, 3}[[4]], {2, 1, 2, 1, 1, 3, 1, 1, 3}[[5]], {2, 1, 2, 1, 1, 3, 1, 1, 3}[[6]]}, {{2, 1, 2, 1, 1, 3, 1, 1, 3}[[7]], {2, 1, 2, 1, 1, 3, 1, 1, 3}[[8]], {2, 1, 2, 1, 1, 3, 1, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 1, 1, 3, 1, 1, 3}[[1]]], "n", ToString[{2, 1, 2, 1, 1, 3, 1, 1, 3}[[2]]], "l", ToString[{2, 1, 2, 1, 1, 3, 1, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 2, 2, 1, 1, ComplexInfinity}, {2, 1, 2, 2, 1, 2, Indeterminate}, {2, 1, 2, 2, 1, 3, Indeterminate}}}, {{{2, 1, 2, 0, 2, 1, ComplexInfinity}, {2, 1, 2, 0, 2, 2, (65.75317713483548*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 0, 2, 2, 0, 2, 2}[[1]], {2, 1, 2, 0, 2, 2, 0, 2, 2}[[2]], {2, 1, 2, 0, 2, 2, 0, 2, 2}[[3]]}, {{2, 1, 2, 0, 2, 2, 0, 2, 2}[[4]], {2, 1, 2, 0, 2, 2, 0, 2, 2}[[5]], {2, 1, 2, 0, 2, 2, 0, 2, 2}[[6]]}, {{2, 1, 2, 0, 2, 2, 0, 2, 2}[[7]], {2, 1, 2, 0, 2, 2, 0, 2, 2}[[8]], {2, 1, 2, 0, 2, 2, 0, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 0, 2, 2, 0, 2, 2}[[1]]], "n", ToString[{2, 1, 2, 0, 2, 2, 0, 2, 2}[[2]]], "l", ToString[{2, 1, 2, 0, 2, 2, 0, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 2, 0, 2, 3, (153.79077263469517*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 0, 2, 3, 0, 2, 3}[[1]], {2, 1, 2, 0, 2, 3, 0, 2, 3}[[2]], {2, 1, 2, 0, 2, 3, 0, 2, 3}[[3]]}, {{2, 1, 2, 0, 2, 3, 0, 2, 3}[[4]], {2, 1, 2, 0, 2, 3, 0, 2, 3}[[5]], {2, 1, 2, 0, 2, 3, 0, 2, 3}[[6]]}, {{2, 1, 2, 0, 2, 3, 0, 2, 3}[[7]], {2, 1, 2, 0, 2, 3, 0, 2, 3}[[8]], {2, 1, 2, 0, 2, 3, 0, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 0, 2, 3, 0, 2, 3}[[1]]], "n", ToString[{2, 1, 2, 0, 2, 3, 0, 2, 3}[[2]]], "l", ToString[{2, 1, 2, 0, 2, 3, 0, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 2, 1, 2, 1, ComplexInfinity}, {2, 1, 2, 1, 2, 2, (21.896484427721095*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 1, 2, 2, 1, 2, 2}[[1]], {2, 1, 2, 1, 2, 2, 1, 2, 2}[[2]], {2, 1, 2, 1, 2, 2, 1, 2, 2}[[3]]}, {{2, 1, 2, 1, 2, 2, 1, 2, 2}[[4]], {2, 1, 2, 1, 2, 2, 1, 2, 2}[[5]], {2, 1, 2, 1, 2, 2, 1, 2, 2}[[6]]}, {{2, 1, 2, 1, 2, 2, 1, 2, 2}[[7]], {2, 1, 2, 1, 2, 2, 1, 2, 2}[[8]], {2, 1, 2, 1, 2, 2, 1, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 1, 2, 2, 1, 2, 2}[[1]]], "n", ToString[{2, 1, 2, 1, 2, 2, 1, 2, 2}[[2]]], "l", ToString[{2, 1, 2, 1, 2, 2, 1, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 2, 1, 2, 3, (51.806132937038136*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 1, 2, 3, 1, 2, 3}[[1]], {2, 1, 2, 1, 2, 3, 1, 2, 3}[[2]], {2, 1, 2, 1, 2, 3, 1, 2, 3}[[3]]}, {{2, 1, 2, 1, 2, 3, 1, 2, 3}[[4]], {2, 1, 2, 1, 2, 3, 1, 2, 3}[[5]], {2, 1, 2, 1, 2, 3, 1, 2, 3}[[6]]}, {{2, 1, 2, 1, 2, 3, 1, 2, 3}[[7]], {2, 1, 2, 1, 2, 3, 1, 2, 3}[[8]], {2, 1, 2, 1, 2, 3, 1, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 1, 2, 3, 1, 2, 3}[[1]]], "n", ToString[{2, 1, 2, 1, 2, 3, 1, 2, 3}[[2]]], "l", ToString[{2, 1, 2, 1, 2, 3, 1, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 1, 2, 2, 2, 1, ComplexInfinity}, {2, 1, 2, 2, 2, 2, (5.452197083700565*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 2, 2, 2, 2, 2, 2}[[1]], {2, 1, 2, 2, 2, 2, 2, 2, 2}[[2]], {2, 1, 2, 2, 2, 2, 2, 2, 2}[[3]]}, {{2, 1, 2, 2, 2, 2, 2, 2, 2}[[4]], {2, 1, 2, 2, 2, 2, 2, 2, 2}[[5]], {2, 1, 2, 2, 2, 2, 2, 2, 2}[[6]]}, {{2, 1, 2, 2, 2, 2, 2, 2, 2}[[7]], {2, 1, 2, 2, 2, 2, 2, 2, 2}[[8]], {2, 1, 2, 2, 2, 2, 2, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 2, 2, 2, 2, 2, 2}[[1]]], "n", ToString[{2, 1, 2, 2, 2, 2, 2, 2, 2}[[2]]], "l", ToString[{2, 1, 2, 2, 2, 2, 2, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 1, 2, 2, 2, 3, (12.975275794871957*NIntegrate[Re[Activate[overlapIntegrand[{{2, 1, 2, 2, 2, 3, 2, 2, 3}[[1]], {2, 1, 2, 2, 2, 3, 2, 2, 3}[[2]], {2, 1, 2, 2, 2, 3, 2, 2, 3}[[3]]}, {{2, 1, 2, 2, 2, 3, 2, 2, 3}[[4]], {2, 1, 2, 2, 2, 3, 2, 2, 3}[[5]], {2, 1, 2, 2, 2, 3, 2, 2, 3}[[6]]}, {{2, 1, 2, 2, 2, 3, 2, 2, 3}[[7]], {2, 1, 2, 2, 2, 3, 2, 2, 3}[[8]], {2, 1, 2, 2, 2, 3, 2, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 1, 2, 2, 2, 3, 2, 2, 3}[[1]]], "n", ToString[{2, 1, 2, 2, 2, 3, 2, 2, 3}[[2]]], "l", ToString[{2, 1, 2, 2, 2, 3, 2, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}