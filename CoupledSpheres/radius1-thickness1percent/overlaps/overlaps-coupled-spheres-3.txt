{{{{2, 3, 0, 0, 0, 1, ComplexInfinity}, {2, 3, 0, 0, 0, 2, Indeterminate}, {2, 3, 0, 0, 0, 3, Indeterminate}}, {{2, 3, 0, 1, 0, 1, ComplexInfinity}, {2, 3, 0, 1, 0, 2, Indeterminate}, {2, 3, 0, 1, 0, 3, Indeterminate}}, {{2, 3, 0, 2, 0, 1, ComplexInfinity}, {2, 3, 0, 2, 0, 2, Indeterminate}, {2, 3, 0, 2, 0, 3, Indeterminate}}}, {{{2, 3, 0, 0, 1, 1, ComplexInfinity}, {2, 3, 0, 0, 1, 2, 0.00008337307888047766/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 0, 0, 1, 3, 0.00008437352346034218/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 0, 1, 1, 1, ComplexInfinity}, {2, 3, 0, 1, 1, 2, -0.00004280564949016845/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 0, 1, 1, 3, -0.000044457059805067235/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 0, 2, 1, 1, ComplexInfinity}, {2, 3, 0, 2, 1, 2, Indeterminate}, {2, 3, 0, 2, 1, 3, Indeterminate}}}, {{{2, 3, 0, 0, 2, 1, ComplexInfinity}, {2, 3, 0, 0, 2, 2, -0.00006146150178856347/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 0, 0, 2, 3, -0.000060916486037487456/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 0, 1, 2, 1, ComplexInfinity}, {2, 3, 0, 1, 2, 2, -0.00003339918922477915/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 0, 1, 2, 3, -0.000030889141450700005/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 0, 2, 2, 1, ComplexInfinity}, {2, 3, 0, 2, 2, 2, 0.00005988023123394252/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 0, 2, 2, 3, 0.000060074768385743685/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 3, 1, 0, 0, 1, ComplexInfinity}, {2, 3, 1, 0, 0, 2, Indeterminate}, {2, 3, 1, 0, 0, 3, Indeterminate}}, {{2, 3, 1, 1, 0, 1, ComplexInfinity}, {2, 3, 1, 1, 0, 2, Indeterminate}, {2, 3, 1, 1, 0, 3, Indeterminate}}, {{2, 3, 1, 2, 0, 1, ComplexInfinity}, {2, 3, 1, 2, 0, 2, Indeterminate}, {2, 3, 1, 2, 0, 3, Indeterminate}}}, {{{2, 3, 1, 0, 1, 1, ComplexInfinity}, {2, 3, 1, 0, 1, 2, -5.478986827136009*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 1, 0, 1, 3, 1.8225680459317794*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 1, 1, 1, 1, ComplexInfinity}, {2, 3, 1, 1, 1, 2, -3.268200693683092*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 1, 1, 1, 3, 0.00001008912717216911/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 1, 2, 1, 1, ComplexInfinity}, {2, 3, 1, 2, 1, 2, Indeterminate}, {2, 3, 1, 2, 1, 3, Indeterminate}}}, {{{2, 3, 1, 0, 2, 1, ComplexInfinity}, {2, 3, 1, 0, 2, 2, -7.144222667741035*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 1, 0, 2, 3, -0.000013465811939551653/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 1, 1, 2, 1, ComplexInfinity}, {2, 3, 1, 1, 2, 2, -7.486739657929921*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 1, 1, 2, 3, 1.7848956943879285*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 1, 2, 2, 1, ComplexInfinity}, {2, 3, 1, 2, 2, 2, 9.187602530195586*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 1, 2, 2, 3, 3.7356944238311717*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 3, 2, 0, 0, 1, ComplexInfinity}, {2, 3, 2, 0, 0, 2, ComplexInfinity}, {2, 3, 2, 0, 0, 3, ComplexInfinity}}, {{2, 3, 2, 1, 0, 1, ComplexInfinity}, {2, 3, 2, 1, 0, 2, ComplexInfinity}, {2, 3, 2, 1, 0, 3, ComplexInfinity}}, {{2, 3, 2, 2, 0, 1, ComplexInfinity}, {2, 3, 2, 2, 0, 2, ComplexInfinity}, {2, 3, 2, 2, 0, 3, ComplexInfinity}}}, {{{2, 3, 2, 0, 1, 1, ComplexInfinity}, {2, 3, 2, 0, 1, 2, (195.93993936873923*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 0, 1, 2, 0, 1, 2}[[1]], {2, 3, 2, 0, 1, 2, 0, 1, 2}[[2]], {2, 3, 2, 0, 1, 2, 0, 1, 2}[[3]]}, {{2, 3, 2, 0, 1, 2, 0, 1, 2}[[4]], {2, 3, 2, 0, 1, 2, 0, 1, 2}[[5]], {2, 3, 2, 0, 1, 2, 0, 1, 2}[[6]]}, {{2, 3, 2, 0, 1, 2, 0, 1, 2}[[7]], {2, 3, 2, 0, 1, 2, 0, 1, 2}[[8]], {2, 3, 2, 0, 1, 2, 0, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 0, 1, 2, 0, 1, 2}[[1]]], "n", ToString[{2, 3, 2, 0, 1, 2, 0, 1, 2}[[2]]], "l", ToString[{2, 3, 2, 0, 1, 2, 0, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 2, 0, 1, 3, (392.30344824310794*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 0, 1, 3, 0, 1, 3}[[1]], {2, 3, 2, 0, 1, 3, 0, 1, 3}[[2]], {2, 3, 2, 0, 1, 3, 0, 1, 3}[[3]]}, {{2, 3, 2, 0, 1, 3, 0, 1, 3}[[4]], {2, 3, 2, 0, 1, 3, 0, 1, 3}[[5]], {2, 3, 2, 0, 1, 3, 0, 1, 3}[[6]]}, {{2, 3, 2, 0, 1, 3, 0, 1, 3}[[7]], {2, 3, 2, 0, 1, 3, 0, 1, 3}[[8]], {2, 3, 2, 0, 1, 3, 0, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 0, 1, 3, 0, 1, 3}[[1]]], "n", ToString[{2, 3, 2, 0, 1, 3, 0, 1, 3}[[2]]], "l", ToString[{2, 3, 2, 0, 1, 3, 0, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 2, 1, 1, 1, ComplexInfinity}, {2, 3, 2, 1, 1, 2, (196.25861932136678*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 1, 1, 2, 1, 1, 2}[[1]], {2, 3, 2, 1, 1, 2, 1, 1, 2}[[2]], {2, 3, 2, 1, 1, 2, 1, 1, 2}[[3]]}, {{2, 3, 2, 1, 1, 2, 1, 1, 2}[[4]], {2, 3, 2, 1, 1, 2, 1, 1, 2}[[5]], {2, 3, 2, 1, 1, 2, 1, 1, 2}[[6]]}, {{2, 3, 2, 1, 1, 2, 1, 1, 2}[[7]], {2, 3, 2, 1, 1, 2, 1, 1, 2}[[8]], {2, 3, 2, 1, 1, 2, 1, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 1, 1, 2, 1, 1, 2}[[1]]], "n", ToString[{2, 3, 2, 1, 1, 2, 1, 1, 2}[[2]]], "l", ToString[{2, 3, 2, 1, 1, 2, 1, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 2, 1, 1, 3, (392.625928165344*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 1, 1, 3, 1, 1, 3}[[1]], {2, 3, 2, 1, 1, 3, 1, 1, 3}[[2]], {2, 3, 2, 1, 1, 3, 1, 1, 3}[[3]]}, {{2, 3, 2, 1, 1, 3, 1, 1, 3}[[4]], {2, 3, 2, 1, 1, 3, 1, 1, 3}[[5]], {2, 3, 2, 1, 1, 3, 1, 1, 3}[[6]]}, {{2, 3, 2, 1, 1, 3, 1, 1, 3}[[7]], {2, 3, 2, 1, 1, 3, 1, 1, 3}[[8]], {2, 3, 2, 1, 1, 3, 1, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 1, 1, 3, 1, 1, 3}[[1]]], "n", ToString[{2, 3, 2, 1, 1, 3, 1, 1, 3}[[2]]], "l", ToString[{2, 3, 2, 1, 1, 3, 1, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 2, 2, 1, 1, ComplexInfinity}, {2, 3, 2, 2, 1, 2, ComplexInfinity}, {2, 3, 2, 2, 1, 3, ComplexInfinity}}}, {{{2, 3, 2, 0, 2, 1, ComplexInfinity}, {2, 3, 2, 0, 2, 2, (65.73885553438663*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 0, 2, 2, 0, 2, 2}[[1]], {2, 3, 2, 0, 2, 2, 0, 2, 2}[[2]], {2, 3, 2, 0, 2, 2, 0, 2, 2}[[3]]}, {{2, 3, 2, 0, 2, 2, 0, 2, 2}[[4]], {2, 3, 2, 0, 2, 2, 0, 2, 2}[[5]], {2, 3, 2, 0, 2, 2, 0, 2, 2}[[6]]}, {{2, 3, 2, 0, 2, 2, 0, 2, 2}[[7]], {2, 3, 2, 0, 2, 2, 0, 2, 2}[[8]], {2, 3, 2, 0, 2, 2, 0, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 0, 2, 2, 0, 2, 2}[[1]]], "n", ToString[{2, 3, 2, 0, 2, 2, 0, 2, 2}[[2]]], "l", ToString[{2, 3, 2, 0, 2, 2, 0, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 2, 0, 2, 3, (155.58337498021507*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 0, 2, 3, 0, 2, 3}[[1]], {2, 3, 2, 0, 2, 3, 0, 2, 3}[[2]], {2, 3, 2, 0, 2, 3, 0, 2, 3}[[3]]}, {{2, 3, 2, 0, 2, 3, 0, 2, 3}[[4]], {2, 3, 2, 0, 2, 3, 0, 2, 3}[[5]], {2, 3, 2, 0, 2, 3, 0, 2, 3}[[6]]}, {{2, 3, 2, 0, 2, 3, 0, 2, 3}[[7]], {2, 3, 2, 0, 2, 3, 0, 2, 3}[[8]], {2, 3, 2, 0, 2, 3, 0, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 0, 2, 3, 0, 2, 3}[[1]]], "n", ToString[{2, 3, 2, 0, 2, 3, 0, 2, 3}[[2]]], "l", ToString[{2, 3, 2, 0, 2, 3, 0, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 2, 1, 2, 1, ComplexInfinity}, {2, 3, 2, 1, 2, 2, (21.825868075353757*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 1, 2, 2, 1, 2, 2}[[1]], {2, 3, 2, 1, 2, 2, 1, 2, 2}[[2]], {2, 3, 2, 1, 2, 2, 1, 2, 2}[[3]]}, {{2, 3, 2, 1, 2, 2, 1, 2, 2}[[4]], {2, 3, 2, 1, 2, 2, 1, 2, 2}[[5]], {2, 3, 2, 1, 2, 2, 1, 2, 2}[[6]]}, {{2, 3, 2, 1, 2, 2, 1, 2, 2}[[7]], {2, 3, 2, 1, 2, 2, 1, 2, 2}[[8]], {2, 3, 2, 1, 2, 2, 1, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 1, 2, 2, 1, 2, 2}[[1]]], "n", ToString[{2, 3, 2, 1, 2, 2, 1, 2, 2}[[2]]], "l", ToString[{2, 3, 2, 1, 2, 2, 1, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 2, 1, 2, 3, (51.58688306866184*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 1, 2, 3, 1, 2, 3}[[1]], {2, 3, 2, 1, 2, 3, 1, 2, 3}[[2]], {2, 3, 2, 1, 2, 3, 1, 2, 3}[[3]]}, {{2, 3, 2, 1, 2, 3, 1, 2, 3}[[4]], {2, 3, 2, 1, 2, 3, 1, 2, 3}[[5]], {2, 3, 2, 1, 2, 3, 1, 2, 3}[[6]]}, {{2, 3, 2, 1, 2, 3, 1, 2, 3}[[7]], {2, 3, 2, 1, 2, 3, 1, 2, 3}[[8]], {2, 3, 2, 1, 2, 3, 1, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 1, 2, 3, 1, 2, 3}[[1]]], "n", ToString[{2, 3, 2, 1, 2, 3, 1, 2, 3}[[2]]], "l", ToString[{2, 3, 2, 1, 2, 3, 1, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 3, 2, 2, 2, 1, ComplexInfinity}, {2, 3, 2, 2, 2, 2, (5.449674841722402*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 2, 2, 2, 2, 2, 2}[[1]], {2, 3, 2, 2, 2, 2, 2, 2, 2}[[2]], {2, 3, 2, 2, 2, 2, 2, 2, 2}[[3]]}, {{2, 3, 2, 2, 2, 2, 2, 2, 2}[[4]], {2, 3, 2, 2, 2, 2, 2, 2, 2}[[5]], {2, 3, 2, 2, 2, 2, 2, 2, 2}[[6]]}, {{2, 3, 2, 2, 2, 2, 2, 2, 2}[[7]], {2, 3, 2, 2, 2, 2, 2, 2, 2}[[8]], {2, 3, 2, 2, 2, 2, 2, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 2, 2, 2, 2, 2, 2}[[1]]], "n", ToString[{2, 3, 2, 2, 2, 2, 2, 2, 2}[[2]]], "l", ToString[{2, 3, 2, 2, 2, 2, 2, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 3, 2, 2, 2, 3, (12.870031988466351*NIntegrate[Re[Activate[overlapIntegrand[{{2, 3, 2, 2, 2, 3, 2, 2, 3}[[1]], {2, 3, 2, 2, 2, 3, 2, 2, 3}[[2]], {2, 3, 2, 2, 2, 3, 2, 2, 3}[[3]]}, {{2, 3, 2, 2, 2, 3, 2, 2, 3}[[4]], {2, 3, 2, 2, 2, 3, 2, 2, 3}[[5]], {2, 3, 2, 2, 2, 3, 2, 2, 3}[[6]]}, {{2, 3, 2, 2, 2, 3, 2, 2, 3}[[7]], {2, 3, 2, 2, 2, 3, 2, 2, 3}[[8]], {2, 3, 2, 2, 2, 3, 2, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 3, 2, 2, 2, 3, 2, 2, 3}[[1]]], "n", ToString[{2, 3, 2, 2, 2, 3, 2, 2, 3}[[2]]], "l", ToString[{2, 3, 2, 2, 2, 3, 2, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}