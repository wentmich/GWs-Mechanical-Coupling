{{{{2, 2, 0, 0, 0, 1, ComplexInfinity}, {2, 2, 0, 0, 0, 2, Indeterminate}, {2, 2, 0, 0, 0, 3, Indeterminate}}, {{2, 2, 0, 1, 0, 1, ComplexInfinity}, {2, 2, 0, 1, 0, 2, Indeterminate}, {2, 2, 0, 1, 0, 3, Indeterminate}}, {{2, 2, 0, 2, 0, 1, ComplexInfinity}, {2, 2, 0, 2, 0, 2, Indeterminate}, {2, 2, 0, 2, 0, 3, Indeterminate}}}, {{{2, 2, 0, 0, 1, 1, ComplexInfinity}, {2, 2, 0, 0, 1, 2, 0.0002248723666452142/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 0, 0, 1, 3, 0.00022324001612856605/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 0, 1, 1, 1, ComplexInfinity}, {2, 2, 0, 1, 1, 2, -0.0001126556313551374/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 0, 1, 1, 3, -0.00011395566319832779/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 0, 2, 1, 1, ComplexInfinity}, {2, 2, 0, 2, 1, 2, Indeterminate}, {2, 2, 0, 2, 1, 3, Indeterminate}}}, {{{2, 2, 0, 0, 2, 1, ComplexInfinity}, {2, 2, 0, 0, 2, 2, -0.00016034975610226164/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 0, 0, 2, 3, -0.0001594194177309093/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 0, 1, 2, 1, ComplexInfinity}, {2, 2, 0, 1, 2, 2, -0.00008180344509261034/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 0, 1, 2, 3, -0.00007608366245204871/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 0, 2, 2, 1, ComplexInfinity}, {2, 2, 0, 2, 2, 2, 0.0001598176519308689/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 0, 2, 2, 3, 0.0001616590228697037/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 2, 1, 0, 0, 1, ComplexInfinity}, {2, 2, 1, 0, 0, 2, Indeterminate}, {2, 2, 1, 0, 0, 3, Indeterminate}}, {{2, 2, 1, 1, 0, 1, ComplexInfinity}, {2, 2, 1, 1, 0, 2, Indeterminate}, {2, 2, 1, 1, 0, 3, Indeterminate}}, {{2, 2, 1, 2, 0, 1, ComplexInfinity}, {2, 2, 1, 2, 0, 2, Indeterminate}, {2, 2, 1, 2, 0, 3, Indeterminate}}}, {{{2, 2, 1, 0, 1, 1, ComplexInfinity}, {2, 2, 1, 0, 1, 2, 0.00003740625929108127/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 1, 0, 1, 3, -0.000018431958738349388/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 1, 1, 1, 1, ComplexInfinity}, {2, 2, 1, 1, 1, 2, -0.00004764380204041278/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 1, 1, 1, 3, 0.000023219689880800902/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 1, 2, 1, 1, ComplexInfinity}, {2, 2, 1, 2, 1, 2, Indeterminate}, {2, 2, 1, 2, 1, 3, Indeterminate}}}, {{{2, 2, 1, 0, 2, 1, ComplexInfinity}, {2, 2, 1, 0, 2, 2, 0.00003228760770911162/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 1, 0, 2, 3, 0.000017823989817846913/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 1, 1, 2, 1, ComplexInfinity}, {2, 2, 1, 1, 2, 2, 0.000024685086347991923/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 1, 1, 2, 3, 6.753937868931757*^-6/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 1, 2, 2, 1, ComplexInfinity}, {2, 2, 1, 2, 2, 2, 0.000010713290614454526/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 1, 2, 2, 3, -0.00005747093465201267/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 2, 2, 0, 0, 1, ComplexInfinity}, {2, 2, 2, 0, 0, 2, ComplexInfinity}, {2, 2, 2, 0, 0, 3, ComplexInfinity}}, {{2, 2, 2, 1, 0, 1, ComplexInfinity}, {2, 2, 2, 1, 0, 2, ComplexInfinity}, {2, 2, 2, 1, 0, 3, ComplexInfinity}}, {{2, 2, 2, 2, 0, 1, ComplexInfinity}, {2, 2, 2, 2, 0, 2, ComplexInfinity}, {2, 2, 2, 2, 0, 3, ComplexInfinity}}}, {{{2, 2, 2, 0, 1, 1, ComplexInfinity}, {2, 2, 2, 0, 1, 2, (196.3281609401774*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 0, 1, 2, 0, 1, 2}[[1]], {2, 2, 2, 0, 1, 2, 0, 1, 2}[[2]], {2, 2, 2, 0, 1, 2, 0, 1, 2}[[3]]}, {{2, 2, 2, 0, 1, 2, 0, 1, 2}[[4]], {2, 2, 2, 0, 1, 2, 0, 1, 2}[[5]], {2, 2, 2, 0, 1, 2, 0, 1, 2}[[6]]}, {{2, 2, 2, 0, 1, 2, 0, 1, 2}[[7]], {2, 2, 2, 0, 1, 2, 0, 1, 2}[[8]], {2, 2, 2, 0, 1, 2, 0, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 0, 1, 2, 0, 1, 2}[[1]]], "n", ToString[{2, 2, 2, 0, 1, 2, 0, 1, 2}[[2]]], "l", ToString[{2, 2, 2, 0, 1, 2, 0, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 2, 0, 1, 3, (390.18612338609995*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 0, 1, 3, 0, 1, 3}[[1]], {2, 2, 2, 0, 1, 3, 0, 1, 3}[[2]], {2, 2, 2, 0, 1, 3, 0, 1, 3}[[3]]}, {{2, 2, 2, 0, 1, 3, 0, 1, 3}[[4]], {2, 2, 2, 0, 1, 3, 0, 1, 3}[[5]], {2, 2, 2, 0, 1, 3, 0, 1, 3}[[6]]}, {{2, 2, 2, 0, 1, 3, 0, 1, 3}[[7]], {2, 2, 2, 0, 1, 3, 0, 1, 3}[[8]], {2, 2, 2, 0, 1, 3, 0, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 0, 1, 3, 0, 1, 3}[[1]]], "n", ToString[{2, 2, 2, 0, 1, 3, 0, 1, 3}[[2]]], "l", ToString[{2, 2, 2, 0, 1, 3, 0, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 2, 1, 1, 1, ComplexInfinity}, {2, 2, 2, 1, 1, 2, (194.69789909907087*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 1, 1, 2, 1, 1, 2}[[1]], {2, 2, 2, 1, 1, 2, 1, 1, 2}[[2]], {2, 2, 2, 1, 1, 2, 1, 1, 2}[[3]]}, {{2, 2, 2, 1, 1, 2, 1, 1, 2}[[4]], {2, 2, 2, 1, 1, 2, 1, 1, 2}[[5]], {2, 2, 2, 1, 1, 2, 1, 1, 2}[[6]]}, {{2, 2, 2, 1, 1, 2, 1, 1, 2}[[7]], {2, 2, 2, 1, 1, 2, 1, 1, 2}[[8]], {2, 2, 2, 1, 1, 2, 1, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 1, 1, 2, 1, 1, 2}[[1]]], "n", ToString[{2, 2, 2, 1, 1, 2, 1, 1, 2}[[2]]], "l", ToString[{2, 2, 2, 1, 1, 2, 1, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 2, 1, 1, 3, (388.88173847316574*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 1, 1, 3, 1, 1, 3}[[1]], {2, 2, 2, 1, 1, 3, 1, 1, 3}[[2]], {2, 2, 2, 1, 1, 3, 1, 1, 3}[[3]]}, {{2, 2, 2, 1, 1, 3, 1, 1, 3}[[4]], {2, 2, 2, 1, 1, 3, 1, 1, 3}[[5]], {2, 2, 2, 1, 1, 3, 1, 1, 3}[[6]]}, {{2, 2, 2, 1, 1, 3, 1, 1, 3}[[7]], {2, 2, 2, 1, 1, 3, 1, 1, 3}[[8]], {2, 2, 2, 1, 1, 3, 1, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 1, 1, 3, 1, 1, 3}[[1]]], "n", ToString[{2, 2, 2, 1, 1, 3, 1, 1, 3}[[2]]], "l", ToString[{2, 2, 2, 1, 1, 3, 1, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 2, 2, 1, 1, ComplexInfinity}, {2, 2, 2, 2, 1, 2, ComplexInfinity}, {2, 2, 2, 2, 1, 3, ComplexInfinity}}}, {{{2, 2, 2, 0, 2, 1, ComplexInfinity}, {2, 2, 2, 0, 2, 2, (65.56707818818619*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 0, 2, 2, 0, 2, 2}[[1]], {2, 2, 2, 0, 2, 2, 0, 2, 2}[[2]], {2, 2, 2, 0, 2, 2, 0, 2, 2}[[3]]}, {{2, 2, 2, 0, 2, 2, 0, 2, 2}[[4]], {2, 2, 2, 0, 2, 2, 0, 2, 2}[[5]], {2, 2, 2, 0, 2, 2, 0, 2, 2}[[6]]}, {{2, 2, 2, 0, 2, 2, 0, 2, 2}[[7]], {2, 2, 2, 0, 2, 2, 0, 2, 2}[[8]], {2, 2, 2, 0, 2, 2, 0, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 0, 2, 2, 0, 2, 2}[[1]]], "n", ToString[{2, 2, 2, 0, 2, 2, 0, 2, 2}[[2]]], "l", ToString[{2, 2, 2, 0, 2, 2, 0, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 2, 0, 2, 3, (153.13433683610265*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 0, 2, 3, 0, 2, 3}[[1]], {2, 2, 2, 0, 2, 3, 0, 2, 3}[[2]], {2, 2, 2, 0, 2, 3, 0, 2, 3}[[3]]}, {{2, 2, 2, 0, 2, 3, 0, 2, 3}[[4]], {2, 2, 2, 0, 2, 3, 0, 2, 3}[[5]], {2, 2, 2, 0, 2, 3, 0, 2, 3}[[6]]}, {{2, 2, 2, 0, 2, 3, 0, 2, 3}[[7]], {2, 2, 2, 0, 2, 3, 0, 2, 3}[[8]], {2, 2, 2, 0, 2, 3, 0, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 0, 2, 3, 0, 2, 3}[[1]]], "n", ToString[{2, 2, 2, 0, 2, 3, 0, 2, 3}[[2]]], "l", ToString[{2, 2, 2, 0, 2, 3, 0, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 2, 1, 2, 1, ComplexInfinity}, {2, 2, 2, 1, 2, 2, (21.65753767527089*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 1, 2, 2, 1, 2, 2}[[1]], {2, 2, 2, 1, 2, 2, 1, 2, 2}[[2]], {2, 2, 2, 1, 2, 2, 1, 2, 2}[[3]]}, {{2, 2, 2, 1, 2, 2, 1, 2, 2}[[4]], {2, 2, 2, 1, 2, 2, 1, 2, 2}[[5]], {2, 2, 2, 1, 2, 2, 1, 2, 2}[[6]]}, {{2, 2, 2, 1, 2, 2, 1, 2, 2}[[7]], {2, 2, 2, 1, 2, 2, 1, 2, 2}[[8]], {2, 2, 2, 1, 2, 2, 1, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 1, 2, 2, 1, 2, 2}[[1]]], "n", ToString[{2, 2, 2, 1, 2, 2, 1, 2, 2}[[2]]], "l", ToString[{2, 2, 2, 1, 2, 2, 1, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 2, 1, 2, 3, (51.58791806941027*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 1, 2, 3, 1, 2, 3}[[1]], {2, 2, 2, 1, 2, 3, 1, 2, 3}[[2]], {2, 2, 2, 1, 2, 3, 1, 2, 3}[[3]]}, {{2, 2, 2, 1, 2, 3, 1, 2, 3}[[4]], {2, 2, 2, 1, 2, 3, 1, 2, 3}[[5]], {2, 2, 2, 1, 2, 3, 1, 2, 3}[[6]]}, {{2, 2, 2, 1, 2, 3, 1, 2, 3}[[7]], {2, 2, 2, 1, 2, 3, 1, 2, 3}[[8]], {2, 2, 2, 1, 2, 3, 1, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 1, 2, 3, 1, 2, 3}[[1]]], "n", ToString[{2, 2, 2, 1, 2, 3, 1, 2, 3}[[2]]], "l", ToString[{2, 2, 2, 1, 2, 3, 1, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 2, 2, 2, 2, 1, ComplexInfinity}, {2, 2, 2, 2, 2, 2, (5.4603618849265985*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 2, 2, 2, 2, 2, 2}[[1]], {2, 2, 2, 2, 2, 2, 2, 2, 2}[[2]], {2, 2, 2, 2, 2, 2, 2, 2, 2}[[3]]}, {{2, 2, 2, 2, 2, 2, 2, 2, 2}[[4]], {2, 2, 2, 2, 2, 2, 2, 2, 2}[[5]], {2, 2, 2, 2, 2, 2, 2, 2, 2}[[6]]}, {{2, 2, 2, 2, 2, 2, 2, 2, 2}[[7]], {2, 2, 2, 2, 2, 2, 2, 2, 2}[[8]], {2, 2, 2, 2, 2, 2, 2, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 2, 2, 2, 2, 2, 2}[[1]]], "n", ToString[{2, 2, 2, 2, 2, 2, 2, 2, 2}[[2]]], "l", ToString[{2, 2, 2, 2, 2, 2, 2, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 2, 2, 2, 2, 3, (13.012492864705598*NIntegrate[Re[Activate[overlapIntegrand[{{2, 2, 2, 2, 2, 3, 2, 2, 3}[[1]], {2, 2, 2, 2, 2, 3, 2, 2, 3}[[2]], {2, 2, 2, 2, 2, 3, 2, 2, 3}[[3]]}, {{2, 2, 2, 2, 2, 3, 2, 2, 3}[[4]], {2, 2, 2, 2, 2, 3, 2, 2, 3}[[5]], {2, 2, 2, 2, 2, 3, 2, 2, 3}[[6]]}, {{2, 2, 2, 2, 2, 3, 2, 2, 3}[[7]], {2, 2, 2, 2, 2, 3, 2, 2, 3}[[8]], {2, 2, 2, 2, 2, 3, 2, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 2, 2, 2, 2, 3, 2, 2, 3}[[1]]], "n", ToString[{2, 2, 2, 2, 2, 3, 2, 2, 3}[[2]]], "l", ToString[{2, 2, 2, 2, 2, 3, 2, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}