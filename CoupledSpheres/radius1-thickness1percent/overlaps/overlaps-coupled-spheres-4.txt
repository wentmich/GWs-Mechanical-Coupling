{{{{2, 4, 0, 0, 0, 1, ComplexInfinity}, {2, 4, 0, 0, 0, 2, Indeterminate}, {2, 4, 0, 0, 0, 3, Indeterminate}}, {{2, 4, 0, 1, 0, 1, ComplexInfinity}, {2, 4, 0, 1, 0, 2, Indeterminate}, {2, 4, 0, 1, 0, 3, Indeterminate}}, {{2, 4, 0, 2, 0, 1, ComplexInfinity}, {2, 4, 0, 2, 0, 2, Indeterminate}, {2, 4, 0, 2, 0, 3, Indeterminate}}}, {{{2, 4, 0, 0, 1, 1, ComplexInfinity}, {2, 4, 0, 0, 1, 2, 0.8510943265539361/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 0, 0, 1, 3, 0.8910178387111272/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 0, 1, 1, 1, ComplexInfinity}, {2, 4, 0, 1, 1, 2, -0.44190339249620453/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 0, 1, 1, 3, -0.45192750946052745/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 0, 2, 1, 1, ComplexInfinity}, {2, 4, 0, 2, 1, 2, Indeterminate}, {2, 4, 0, 2, 1, 3, Indeterminate}}}, {{{2, 4, 0, 0, 2, 1, ComplexInfinity}, {2, 4, 0, 0, 2, 2, -0.6570671149708781/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 0, 0, 2, 3, -0.6413034661801345/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 0, 1, 2, 1, ComplexInfinity}, {2, 4, 0, 1, 2, 2, -0.3026075297512967/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 0, 1, 2, 3, -0.33467788585153324/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 0, 2, 2, 1, ComplexInfinity}, {2, 4, 0, 2, 2, 2, 0.6497761776193461/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 0, 2, 2, 3, 0.6603785628862693/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 4, 1, 0, 0, 1, ComplexInfinity}, {2, 4, 1, 0, 0, 2, Indeterminate}, {2, 4, 1, 0, 0, 3, Indeterminate}}, {{2, 4, 1, 1, 0, 1, ComplexInfinity}, {2, 4, 1, 1, 0, 2, Indeterminate}, {2, 4, 1, 1, 0, 3, Indeterminate}}, {{2, 4, 1, 2, 0, 1, ComplexInfinity}, {2, 4, 1, 2, 0, 2, Indeterminate}, {2, 4, 1, 2, 0, 3, Indeterminate}}}, {{{2, 4, 1, 0, 1, 1, ComplexInfinity}, {2, 4, 1, 0, 1, 2, 0.002226920341184867/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 1, 0, 1, 3, -0.0072600739725459185/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 1, 1, 1, 1, ComplexInfinity}, {2, 4, 1, 1, 1, 2, 0.014825993880923389/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 1, 1, 1, 3, -0.0067148489830106935/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 1, 2, 1, 1, ComplexInfinity}, {2, 4, 1, 2, 1, 2, Indeterminate}, {2, 4, 1, 2, 1, 3, Indeterminate}}}, {{{2, 4, 1, 0, 2, 1, ComplexInfinity}, {2, 4, 1, 0, 2, 2, -0.010979525131894081/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 1, 0, 2, 3, 0.016613911272662908/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 1, 1, 2, 1, ComplexInfinity}, {2, 4, 1, 1, 2, 2, 0.0020678330044208645/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 1, 1, 2, 3, -0.016795456760656333/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 1, 2, 2, 1, ComplexInfinity}, {2, 4, 1, 2, 2, 2, -0.024441411947614303/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 1, 2, 2, 3, 0.0027518020577376925/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}
{{{{2, 4, 2, 0, 0, 1, ComplexInfinity}, {2, 4, 2, 0, 0, 2, ComplexInfinity}, {2, 4, 2, 0, 0, 3, ComplexInfinity}}, {{2, 4, 2, 1, 0, 1, ComplexInfinity}, {2, 4, 2, 1, 0, 2, ComplexInfinity}, {2, 4, 2, 1, 0, 3, ComplexInfinity}}, {{2, 4, 2, 2, 0, 1, ComplexInfinity}, {2, 4, 2, 2, 0, 2, ComplexInfinity}, {2, 4, 2, 2, 0, 3, ComplexInfinity}}}, {{{2, 4, 2, 0, 1, 1, ComplexInfinity}, {2, 4, 2, 0, 1, 2, (195.59808871489008*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 0, 1, 2, 0, 1, 2}[[1]], {2, 4, 2, 0, 1, 2, 0, 1, 2}[[2]], {2, 4, 2, 0, 1, 2, 0, 1, 2}[[3]]}, {{2, 4, 2, 0, 1, 2, 0, 1, 2}[[4]], {2, 4, 2, 0, 1, 2, 0, 1, 2}[[5]], {2, 4, 2, 0, 1, 2, 0, 1, 2}[[6]]}, {{2, 4, 2, 0, 1, 2, 0, 1, 2}[[7]], {2, 4, 2, 0, 1, 2, 0, 1, 2}[[8]], {2, 4, 2, 0, 1, 2, 0, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 0, 1, 2, 0, 1, 2}[[1]]], "n", ToString[{2, 4, 2, 0, 1, 2, 0, 1, 2}[[2]]], "l", ToString[{2, 4, 2, 0, 1, 2, 0, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 2, 0, 1, 3, (381.0461516861367*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 0, 1, 3, 0, 1, 3}[[1]], {2, 4, 2, 0, 1, 3, 0, 1, 3}[[2]], {2, 4, 2, 0, 1, 3, 0, 1, 3}[[3]]}, {{2, 4, 2, 0, 1, 3, 0, 1, 3}[[4]], {2, 4, 2, 0, 1, 3, 0, 1, 3}[[5]], {2, 4, 2, 0, 1, 3, 0, 1, 3}[[6]]}, {{2, 4, 2, 0, 1, 3, 0, 1, 3}[[7]], {2, 4, 2, 0, 1, 3, 0, 1, 3}[[8]], {2, 4, 2, 0, 1, 3, 0, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 0, 1, 3, 0, 1, 3}[[1]]], "n", ToString[{2, 4, 2, 0, 1, 3, 0, 1, 3}[[2]]], "l", ToString[{2, 4, 2, 0, 1, 3, 0, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 0, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 2, 1, 1, 1, ComplexInfinity}, {2, 4, 2, 1, 1, 2, (194.90420271149492*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 1, 1, 2, 1, 1, 2}[[1]], {2, 4, 2, 1, 1, 2, 1, 1, 2}[[2]], {2, 4, 2, 1, 1, 2, 1, 1, 2}[[3]]}, {{2, 4, 2, 1, 1, 2, 1, 1, 2}[[4]], {2, 4, 2, 1, 1, 2, 1, 1, 2}[[5]], {2, 4, 2, 1, 1, 2, 1, 1, 2}[[6]]}, {{2, 4, 2, 1, 1, 2, 1, 1, 2}[[7]], {2, 4, 2, 1, 1, 2, 1, 1, 2}[[8]], {2, 4, 2, 1, 1, 2, 1, 1, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 1, 1, 2, 1, 1, 2}[[1]]], "n", ToString[{2, 4, 2, 1, 1, 2, 1, 1, 2}[[2]]], "l", ToString[{2, 4, 2, 1, 1, 2, 1, 1, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 7.7301698480456515, 7.725251799996747, 7.7301698480456515, 7.725251799996747, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 2, 1., 7.7301698480456515, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 2, 1, 1, 3, (388.6462374194068*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 1, 1, 3, 1, 1, 3}[[1]], {2, 4, 2, 1, 1, 3, 1, 1, 3}[[2]], {2, 4, 2, 1, 1, 3, 1, 1, 3}[[3]]}, {{2, 4, 2, 1, 1, 3, 1, 1, 3}[[4]], {2, 4, 2, 1, 1, 3, 1, 1, 3}[[5]], {2, 4, 2, 1, 1, 3, 1, 1, 3}[[6]]}, {{2, 4, 2, 1, 1, 3, 1, 1, 3}[[7]], {2, 4, 2, 1, 1, 3, 1, 1, 3}[[8]], {2, 4, 2, 1, 1, 3, 1, 1, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 1, 1, 3, 1, 1, 3}[[1]]], "n", ToString[{2, 4, 2, 1, 1, 3, 1, 1, 3}[[2]]], "l", ToString[{2, 4, 2, 1, 1, 3, 1, 1, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 10.911063479479115, 10.90412169999541, 10.911063479479115, 10.90412169999541, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ], electricFieldTM[1., 1, 1, 1, 3, 1., 10.911063479479115, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 1, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 2, 2, 1, 1, ComplexInfinity}, {2, 4, 2, 2, 1, 2, ComplexInfinity}, {2, 4, 2, 2, 1, 3, ComplexInfinity}}}, {{{2, 4, 2, 0, 2, 1, ComplexInfinity}, {2, 4, 2, 0, 2, 2, (64.80418130938384*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 0, 2, 2, 0, 2, 2}[[1]], {2, 4, 2, 0, 2, 2, 0, 2, 2}[[2]], {2, 4, 2, 0, 2, 2, 0, 2, 2}[[3]]}, {{2, 4, 2, 0, 2, 2, 0, 2, 2}[[4]], {2, 4, 2, 0, 2, 2, 0, 2, 2}[[5]], {2, 4, 2, 0, 2, 2, 0, 2, 2}[[6]]}, {{2, 4, 2, 0, 2, 2, 0, 2, 2}[[7]], {2, 4, 2, 0, 2, 2, 0, 2, 2}[[8]], {2, 4, 2, 0, 2, 2, 0, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 0, 2, 2, 0, 2, 2}[[1]]], "n", ToString[{2, 4, 2, 0, 2, 2, 0, 2, 2}[[2]]], "l", ToString[{2, 4, 2, 0, 2, 2, 0, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 2, 0, 2, 3, (153.33591769761412*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 0, 2, 3, 0, 2, 3}[[1]], {2, 4, 2, 0, 2, 3, 0, 2, 3}[[2]], {2, 4, 2, 0, 2, 3, 0, 2, 3}[[3]]}, {{2, 4, 2, 0, 2, 3, 0, 2, 3}[[4]], {2, 4, 2, 0, 2, 3, 0, 2, 3}[[5]], {2, 4, 2, 0, 2, 3, 0, 2, 3}[[6]]}, {{2, 4, 2, 0, 2, 3, 0, 2, 3}[[7]], {2, 4, 2, 0, 2, 3, 0, 2, 3}[[8]], {2, 4, 2, 0, 2, 3, 0, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 0, 2, 3, 0, 2, 3}[[1]]], "n", ToString[{2, 4, 2, 0, 2, 3, 0, 2, 3}[[2]]], "l", ToString[{2, 4, 2, 0, 2, 3, 0, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 0, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 0, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 2, 1, 2, 1, ComplexInfinity}, {2, 4, 2, 1, 2, 2, (21.770288426442722*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 1, 2, 2, 1, 2, 2}[[1]], {2, 4, 2, 1, 2, 2, 1, 2, 2}[[2]], {2, 4, 2, 1, 2, 2, 1, 2, 2}[[3]]}, {{2, 4, 2, 1, 2, 2, 1, 2, 2}[[4]], {2, 4, 2, 1, 2, 2, 1, 2, 2}[[5]], {2, 4, 2, 1, 2, 2, 1, 2, 2}[[6]]}, {{2, 4, 2, 1, 2, 2, 1, 2, 2}[[7]], {2, 4, 2, 1, 2, 2, 1, 2, 2}[[8]], {2, 4, 2, 1, 2, 2, 1, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 1, 2, 2, 1, 2, 2}[[1]]], "n", ToString[{2, 4, 2, 1, 2, 2, 1, 2, 2}[[2]]], "l", ToString[{2, 4, 2, 1, 2, 2, 1, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 2, 1, 2, 3, (51.754265441673304*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 1, 2, 3, 1, 2, 3}[[1]], {2, 4, 2, 1, 2, 3, 1, 2, 3}[[2]], {2, 4, 2, 1, 2, 3, 1, 2, 3}[[3]]}, {{2, 4, 2, 1, 2, 3, 1, 2, 3}[[4]], {2, 4, 2, 1, 2, 3, 1, 2, 3}[[5]], {2, 4, 2, 1, 2, 3, 1, 2, 3}[[6]]}, {{2, 4, 2, 1, 2, 3, 1, 2, 3}[[7]], {2, 4, 2, 1, 2, 3, 1, 2, 3}[[8]], {2, 4, 2, 1, 2, 3, 1, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 1, 2, 3, 1, 2, 3}[[1]]], "n", ToString[{2, 4, 2, 1, 2, 3, 1, 2, 3}[[2]]], "l", ToString[{2, 4, 2, 1, 2, 3, 1, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 1, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 1, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}, {{2, 4, 2, 2, 2, 1, ComplexInfinity}, {2, 4, 2, 2, 2, 2, (5.56088240691298*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 2, 2, 2, 2, 2, 2}[[1]], {2, 4, 2, 2, 2, 2, 2, 2, 2}[[2]], {2, 4, 2, 2, 2, 2, 2, 2, 2}[[3]]}, {{2, 4, 2, 2, 2, 2, 2, 2, 2}[[4]], {2, 4, 2, 2, 2, 2, 2, 2, 2}[[5]], {2, 4, 2, 2, 2, 2, 2, 2, 2}[[6]]}, {{2, 4, 2, 2, 2, 2, 2, 2, 2}[[7]], {2, 4, 2, 2, 2, 2, 2, 2, 2}[[8]], {2, 4, 2, 2, 2, 2, 2, 2, 2}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 2, 2, 2, 2, 2, 2}[[1]]], "n", ToString[{2, 4, 2, 2, 2, 2, 2, 2, 2}[[2]]], "l", ToString[{2, 4, 2, 2, 2, 2, 2, 2, 2}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 5.767128332086381, 5.763459199997573, 5.767128332086381, 5.763459199997573, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 2, 1., 5.767128332086381, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 2, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}, {2, 4, 2, 2, 2, 3, (13.073018594148314*NIntegrate[Re[Activate[overlapIntegrand[{{2, 4, 2, 2, 2, 3, 2, 2, 3}[[1]], {2, 4, 2, 2, 2, 3, 2, 2, 3}[[2]], {2, 4, 2, 2, 2, 3, 2, 2, 3}[[3]]}, {{2, 4, 2, 2, 2, 3, 2, 2, 3}[[4]], {2, 4, 2, 2, 2, 3, 2, 2, 3}[[5]], {2, 4, 2, 2, 2, 3, 2, 2, 3}[[6]]}, {{2, 4, 2, 2, 2, 3, 2, 2, 3}[[7]], {2, 4, 2, 2, 2, 3, 2, 2, 3}[[8]], {2, 4, 2, 2, 2, 3, 2, 2, 3}[[9]]}, 1., {"C0", "D0", 0., 0., "C2", "D2"} /. Quiet[StringJoin["m", ToString[{2, 4, 2, 2, 2, 3, 2, 2, 3}[[1]]], "n", ToString[{2, 4, 2, 2, 2, 3, 2, 2, 3}[[2]]], "l", ToString[{2, 4, 2, 2, 2, 3, 2, 2, 3}[[3]]]] /. MODES[[1]]], 1., 0, 0, 1, 1, 9.100801364027316, 9.09501129999617, 9.100801364027316, 9.09501129999617, θ, ϕ]]], {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> {"AdaptiveMonteCarlo"}, MaxPoints -> 10^4, PrecisionGoal -> 2])/NIntegrate[r^2*Sin[θ]*Norm[If[0 == 0, electricFieldTE[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ], electricFieldTM[1., 1, 2, 2, 3, 1., 9.100801364027316, r, θ, ϕ]]]^2*getNormalizationFactor[1, 2, 2, 3, 1., 0]^2, {r, 0., 1.}, {θ, 0., Pi}, {ϕ, 0., 2.*Pi}, Method -> "AdaptiveMonteCarlo", MaxPoints -> 10^5, PrecisionGoal -> 2]}}}}